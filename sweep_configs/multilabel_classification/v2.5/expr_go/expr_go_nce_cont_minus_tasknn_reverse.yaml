name: expr_go_nce_cont_minus_tasknn_reverse
description: "Train tasknn using cross-entropy and  score loss (v(f(x),y)). The score-nn will be trained using NCE with a - sign (score+ln Pn). The samples are taken as continuous samples by adding gaussian noise to the tasknn output logits"
program: allennlp
command:
- ${program}
- train_with_wandb
- model_configs/multilabel_classification/v2.5/gendata_nce_cont_tasknn_reverse.jsonnet
- --include-package=structured_prediction_baselines
- --wandb_tags="task=mlc,score_nn_loss=nce,sampler=inference_net_continuous_samples,dataset=expr_go,inference_module=inference_net,inference_module=tasknn,inference_module_loss=bce+score,sampler=tasknn_contiuous_samples,ref=7tvr5xhg"
- ${args}
- --file-friendly-logging
method: bayes
metric:
  goal: maximize
  name: "validation/best_fixed_f1"

early_terminate:
  type: hyperband
  min_iter: 20

parameters:
  env.dataset_name:
    value: 'expr_go'
  env.cross_entropy_loss_weight:
    value: 1.0
  env.dvn_score_loss_weight:
    distribution: log_uniform
    min: -6.9
    max: 2.3
  env.ff_dropout_10x:
    value: 1.0 # bibtex
  env.ff_hidden:
    value: 500 # bibtex
  env.ff_linear_layers:
    value: 4 # bibtex
  env.ff_weight_decay:
    value: 0.00001
  env.global_score_hidden_dim:
    value: 400
  trainer.optimizer.optimizers.task_nn.lr:
    distribution: log_uniform
    min: -12.5
    max: -4.5  
  trainer.optimizer.optimizers.score_nn.lr:
    distribution: log_uniform
    min: -11.5
    max: -4.5
  env.score_nn_steps:
    distribution: q_uniform
    min: 0
    max: 11.99
    q: 3
  env.task_nn_steps: # instead of trainer.num_steps.task_nn
    value: 1
  model.loss_fn.num_samples:
    distribution: q_uniform
    q: 20 # 10, 25, ..., 50
    min: 20 # ln(10)
    max: 100 # ln(50)
  model.loss_fn.sign:
    value: "-"
  model.loss_fn.std:
    distribution: log_uniform 
    min: -6.9 # ln(0.001)
    max: 1.6  # ln(5)
