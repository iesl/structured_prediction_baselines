name: genbase_refined_margin_l1_tasknn
description: "Train tasknn using cross-entropy and inference score loss (as in Tu & Gimpel). The score-nn will be trained using margin based loss with cost augmented network. There is no sampling in this version"
program: allennlp
command:
- ${program}
- train_with_wandb
- model_configs/multilabel_classification/v2.5/gendata_margin_l1_tasknn.jsonnet
- --include-package=structured_prediction_baselines
- --wandb_tags="task=mlc,score_nn_loss=margin,task_nn_loss=bce+inference_score,sampler=inference_net,dataset=genbase,inference_module=inference_net,inference_module=tasknn,inference_module_loss=bce+inference_score,sampler=tasknn"
- ${args}
- --file-friendly-logging
method: bayes
metric:
  goal: maximize
  name: "validation/best_fixed_f1"

early_terminate:
  type: hyperband
  min_iter: 20

parameters:
  env.dataset_name:
    value: 'genbase'
  env.cross_entropy_loss_weight:
    distribution: log_uniform
    min: -6.9
    max: 2.3
  env.inference_score_weight:
    distribution: log_uniform
    min: -6.9
    max: 2.3
  env.ff_dropout_10x:
    value: 3
    # distribution: q_uniform
    # min: 0.5 # 1
    # max: 5.49 # 5
  env.ff_hidden:
    value: 400 # bibtex
  env.ff_linear_layers:
    value: 1
    # value: 2 # bibtex
  env.ff_weight_decay:
    value: 0.00001
  env.global_score_hidden_dim:
    value: 200 
    # value: 200 # bibtex  
  trainer.optimizer.optimizers.task_nn.lr:
    distribution: log_uniform
    min: -12.5
    max: -4.5
  trainer.optimizer.optimizers.score_nn.lr:
    distribution: log_uniform
    min: -11.5
    max: -4.5
  env.task_nn_steps: # instead of trainer.num_steps.task_nn
    distribution: q_uniform
    q: 5 # 1, 5, 10 --> manual handling in the jsonnet.
    min: 0
    max: 10