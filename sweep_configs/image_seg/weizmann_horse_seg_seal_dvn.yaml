command:
  - ${program}
  - train-with-wandb
  - model_configs/image_seg/weizmann_horse_seg_seal_dvn.jsonnet
  - --include-package=structured_prediction_baselines
  - --wandb-entity=score-based-learning
  - --wandb-project=segmentation
  - --wandb-tags=task@image_seg,dataset@weizmann_horse
  - ${args}
  - --file-friendly-logging
description: >
  Train tasknn using cross-entropy and energy. 
  The score-nn will predict soft IoU and be trained using DVN. 
  The samples are taken as discrete samples from the tasknn output.
method: bayes
metric:
  goal: maximize
  name: validation/best_seg_iou
name: weizmann_horse_seg_seal_dvn
parameters:
  env.batch_size:
    value: 8
  env.eval_cropping:
    value: thirty_six
  env.score_loss_weight:
    distribution: log_uniform_values
    max: 10
    min: 0.001
  trainer.grad_norm.score_nn:
    distribution: q_uniform
    max: 9.99
    min: 1
    q: 2
  trainer.grad_norm.task_nn:
    distribution: q_uniform
    max: 9.99
    min: 1
    q: 2
  trainer.num_steps.score_nn:
    distribution: int_uniform
    max: 10
    min: 1
  trainer.num_steps.task_nn:
    distribution: int_uniform
    max: 10
    min: 1
  trainer.optimizer.optimizers.score_nn.lr:
    distribution: log_uniform_values
    max: 0.02
    min: 1e-05
  trainer.optimizer.optimizers.score_nn.weight_decay:
    distribution: log_uniform_values
    max: 0.001
    min: 1e-05
  trainer.optimizer.optimizers.task_nn.lr:
    distribution: log_uniform_values
    max: 0.02
    min: 1e-05
  trainer.optimizer.optimizers.task_nn.weight_decay:
    distribution: log_uniform_values
    max: 0.01
    min: 1e-05
program: allennlp